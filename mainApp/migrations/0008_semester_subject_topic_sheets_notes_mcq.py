# Generated by Django 5.2.1 on 2025-06-20 19:50

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mainApp', '0007_alter_student_password'),
    ]

    operations = [
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.IntegerField(error_messages={'blank': 'This field cannot be blank.'}, validators=[django.core.validators.MaxLengthValidator(4)])),
                ('term', models.CharField(choices=[('fall', 'Fall'), ('spring', 'Spring'), ('summer', 'Summer')], max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(error_messages={'blank': 'This field cannot be blank.', 'unique': 'This subject name has already been used.'}, max_length=100, unique=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('level', models.CharField(choices=[('1', 'Level 1'), ('2', 'Level 2'), ('3', 'Level 3'), ('4', 'Level 4'), ('5', 'Level 5')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('topic_name', models.CharField(error_messages={'blank': 'This field cannot be blank.'}, max_length=100, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='mainApp.semester')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='mainApp.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Sheets',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sheet_name', models.CharField(error_messages={'blank': 'This field cannot be blank.'}, max_length=100, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('sheet_file', models.FileField(error_messages={'blank': 'This field cannot be blank.'}, upload_to='sheets/')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sheets', to='mainApp.semester')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sheets', to='mainApp.subject')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sheets', to='mainApp.topic')),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('note_name', models.CharField(error_messages={'blank': 'This field cannot be blank.'}, max_length=100, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('note_file', models.FileField(error_messages={'blank': 'This field cannot be blank.'}, upload_to='notes/')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='mainApp.semester')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='mainApp.subject')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='mainApp.topic')),
            ],
        ),
        migrations.CreateModel(
            name='Mcq',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mcq_name', models.CharField(error_messages={'blank': 'This field cannot be blank.'}, max_length=100, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('mcq_a', models.CharField(error_messages={'blank': 'This field cannot be blank.'}, max_length=500, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('mcq_b', models.CharField(error_messages={'blank': 'This field cannot be blank.'}, max_length=500, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('mcq_c', models.CharField(error_messages={'blank': 'This field cannot be blank.'}, max_length=500, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('mcq_d', models.CharField(error_messages={'blank': 'This field cannot be blank.'}, max_length=500, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('mcq_answer', models.CharField(choices=[('A', 'Option A'), ('B', 'Option B'), ('C', 'Option C'), ('D', 'Option D')], error_messages={'blank': 'This field cannot be blank.'}, max_length=1)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mcqs', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mcqs', to='mainApp.subject')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mcqs', to='mainApp.topic')),
            ],
        ),
    ]
